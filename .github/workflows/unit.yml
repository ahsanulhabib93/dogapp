name: Golang Unit Testing

on:
  pull_request:
  push:
    branches:
      - master

env:
  SOURCE_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  GONOSUMDB: github.com/voonik/*,github.com/shopuptech/*
  GOPRIVATE: github.com/voonik/*,github.com/shopuptech/*

jobs:
  lint:
    if: github.actor != 'dependabot[bot]'
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go Version 1.17
        uses: actions/setup-go@v3
        with:
          go-version: "1.17.12"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Install SSH keys
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: setup
        run: |
          git config --global --add url."git@github.com:voonik/".insteadOf "https://github.com/voonik/"
          git config --global --add url."git@github.com:shopuptech/".insteadOf "https://github.com/shopuptech/"
          make setup

      - name: lint
        run: |
          make test
          make lint

  tests:
    if: github.actor != 'dependabot[bot]'
    name: Unit Testing
    runs-on: ubuntu-latest
    services:
      # How to use Mysql
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      # How to use Redis
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Setup Env Vars and work dir
        run: |
          test -d "GoLang/src/github.com/voonik/ss2" || mkdir -p "GoLang/src/github.com/voonik/ss2"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: GoLang/src/github.com/voonik/ss2
          fetch-depth: 0

      - name: ssh key setup
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: "Add known public keys of github here"
          if_key_exists: replace

      - name: Verify MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python-dev-is-python3 nginx-extras pkg-config cmake libxrender1 libmysqlclient-dev ncurses-dev gettext flex bison autoconf binutils-doc redis-tools vim nfs-common jq bc
          mysql --host 127.0.0.1 --port 33306 -uroot -ppassword -e "SHOW GRANTS FOR 'root'@'localhost'"
          mysql --host 127.0.0.1 --port 33306 -uroot -ppassword -e "SET GLOBAL sql_mode = ''"
          mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port 33306 -uroot -ppassword mysql

      - name: Setup GO
        uses: actions/setup-go@v2
        with:
          go-version: "1.16.3"

      - name: Create DB
        env:
          ENV: test
        run: |
          touch create_db.sql
          echo "create database ss2_test;" >> create_db.sql
          mysql --host 127.0.0.1 --port 33306 -uroot -ppassword  < create_db.sql

      - name: setup
        run: |
          git config --global --add url."git@github.com:voonik/".insteadOf "https://github.com/voonik/"
          git config --global --add url."git@github.com:shopuptech/".insteadOf "https://github.com/shopuptech/"
          cd GoLang/src/github.com/voonik/ss2
          make setup

      - name: test
        env:
          ENV: test
        run: |
          cd GoLang/src/github.com/voonik/ss2
          make test.report

      - name: test coverage
        run: |
          test_coverage=`grep -E "^Total" GoLang/src/github.com/voonik/ss2/coverage/coverage.txt | grep -Eo -m 1 "[0-9]+.[0-9]+" | head -1`
          echo "TEST_COVERAGE=$test_coverage" >> $GITHUB_ENV

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: GoLang/src/github.com/voonik/ss2/coverage/coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: GoLang/src/github.com/voonik/ss2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: "coverage/*.xml"
