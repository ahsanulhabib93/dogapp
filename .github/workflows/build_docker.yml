name: Manual workflow to build docker
on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_STAGING_CLUSTER: ${{ secrets.GKE_STAGING_CLUSTER }}    # TODO: update to cluster name
  GKE_ZONE: ${{ secrets.GKE_ZONE }}   # TODO: update to cluster zone
  GITHUB_TOKEN: ${{ secrets.GIHUB_PAT }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    outputs:
      SONAR_STATUS: ${{ steps.sonar.outputs.SONAR_STATUS }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Sonar Cloud Quality Check
      id: sonar
      run: |-
        STATUS=`curl -u $SONAR_TOKEN: https://sonarcloud.io/api/qualitygates/project_status\?projectKey\=shopuptech_ss2\&pullRequest\=$PR_NUMBER | jq -r '.projectStatus.status'`
        echo $STATUS
        echo "SONAR_STATUS=$STATUS" >> $GITHUB_OUTPUT    
  setup-build-staging:
    name: Setup, Build to staging
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/144345706419/locations/global/workloadIdentityPools/github-actions/providers/github'
          service_account: 'circleci@voonik-tech.iam.gserviceaccount.com'

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v1

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Build and Push the Docker image to Google Container Registry
      - name: Build and push
        run: |
          export IMAGE_TAG=`echo "$GITHUB_REF_NAME" | sed 's/[^a-zA-Z0-9]/-/g'`-$GITHUB_RUN_NUMBER
           docker build -t ss2 . --build-arg GITHUB_TOKEN="${{secrets.GIHUB_PAT}}" -f docker/Dockerfile
          docker tag ss2 gcr.io/voonik-tech/vnkshopup/ss2:$IMAGE_TAG
          docker push gcr.io/voonik-tech/vnkshopup/ss2:$IMAGE_TAG
      
      - name: Update proto configmap
        run: |
          gcloud container clusters get-credentials shopup-mokam-stg --zone asia-southeast1 --project $PROJECT_ID
          helm plugin install https://github.com/hayorov/helm-gcs --version 0.3.5
          helm repo add shopup gs://shopup-prod/helm-charts
          helm repo update
          ### Update envoy grpc transcoder if any changes are made to protobuf file ###
            git clone https://$GITHUB_TOKEN@github.com/Voonik/goConnect.git
            cd goConnect
            git checkout $(grep "github.com/voonik/goConnect" ../go.mod | awk -F'-' '{print $(NF)}')
            cd -
            git clone https://github.com/googleapis/googleapis
            GOOGLEAPIS_DIR=./googleapis
            cp goConnect/api/proto/health/health_v1.proto .
            cp goConnect/api/proto/ss2/{supplier*,payment*,key*} .
            sed -i 's/\/\/transcoder//' supplier.proto supplier_address.proto payment_account_detail.proto key_account_manager.proto health_v1.proto attachment.proto
            sudo apt-get install -y protobuf-compiler
            protoc -I${GOOGLEAPIS_DIR} -I. --include_imports --include_source_info --descriptor_set_out=supplier.pb supplier.proto supplier_address.proto payment_account_detail.proto key_account_manager.proto health_v1.proto attachment.proto
            kubectl -n mokam-dev create configmap ss2-proto-bin --from-file=supplier.pb -o yaml --dry-run=client | kubectl apply -f -




