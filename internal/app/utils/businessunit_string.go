// Code generated by "stringer --type=BusinessUnit"; DO NOT EDIT.

package utils

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UNICORN-1]
	_ = x[UNBRANDED-2]
	_ = x[BRANDED-3]
	_ = x[LIFESTYLE-4]
	_ = x[BLITZ-5]
	_ = x[AGRO-6]
	_ = x[WHOLESALE-7]
	_ = x[MWS-8]
	_ = x[FRESH-9]
	_ = x[POULTRY-10]
	_ = x[APPAREL-11]
	_ = x[INFRA-12]
	_ = x[ENERGY-13]
	_ = x[ELECTRONICS-14]
	_ = x[MOKAM_X-20]
	_ = x[AGRO_FISH_PROJECT-21]
	_ = x[POP_BOISHAKHI-22]
	_ = x[REDX_FULFILLMENT_SERVICE-100]
	_ = x[REDX_FULFILLMENT_SERVICE2-101]
	_ = x[DAS-200]
}

const (
	_BusinessUnit_name_0 = "UNICORNUNBRANDEDBRANDEDLIFESTYLEBLITZAGROWHOLESALEMWSFRESHPOULTRYAPPARELINFRAENERGYELECTRONICS"
	_BusinessUnit_name_1 = "MOKAM_XAGRO_FISH_PROJECTPOP_BOISHAKHI"
	_BusinessUnit_name_2 = "REDX_FULFILLMENT_SERVICEREDX_FULFILLMENT_SERVICE2"
	_BusinessUnit_name_3 = "DAS"
)

var (
	_BusinessUnit_index_0 = [...]uint8{0, 7, 16, 23, 32, 37, 41, 50, 53, 58, 65, 72, 77, 83, 94}
	_BusinessUnit_index_1 = [...]uint8{0, 7, 24, 37}
	_BusinessUnit_index_2 = [...]uint8{0, 24, 49}
)

func (i BusinessUnit) String() string {
	switch {
	case 1 <= i && i <= 14:
		i -= 1
		return _BusinessUnit_name_0[_BusinessUnit_index_0[i]:_BusinessUnit_index_0[i+1]]
	case 20 <= i && i <= 22:
		i -= 20
		return _BusinessUnit_name_1[_BusinessUnit_index_1[i]:_BusinessUnit_index_1[i+1]]
	case 100 <= i && i <= 101:
		i -= 100
		return _BusinessUnit_name_2[_BusinessUnit_index_2[i]:_BusinessUnit_index_2[i+1]]
	case i == 200:
		return _BusinessUnit_name_3
	default:
		return "BusinessUnit(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
