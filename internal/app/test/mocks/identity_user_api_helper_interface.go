// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	helpers "github.com/voonik/ss2/internal/app/helpers"
)

// IdentityUserApiHelperInterface is an autogenerated mock type for the IdentityUserApiHelperInterface type
type IdentityUserApiHelperInterface struct {
	mock.Mock
}

// GetUserDetailsApiByPhone provides a mock function with given fields: _a0, _a1
func (_m *IdentityUserApiHelperInterface) GetUserDetailsApiByPhone(_a0 context.Context, _a1 string) *helpers.IdentityUserObject {
	ret := _m.Called(_a0, _a1)

	var r0 *helpers.IdentityUserObject
	if rf, ok := ret.Get(0).(func(context.Context, string) *helpers.IdentityUserObject); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*helpers.IdentityUserObject)
		}
	}

	return r0
}

// IdentityBulkUserDetailsApi provides a mock function with given fields: _a0, _a1
func (_m *IdentityUserApiHelperInterface) IdentityBulkUserDetailsApi(_a0 context.Context, _a1 []string) map[string]helpers.IdentityUserObject {
	ret := _m.Called(_a0, _a1)

	var r0 map[string]helpers.IdentityUserObject
	if rf, ok := ret.Get(0).(func(context.Context, []string) map[string]helpers.IdentityUserObject); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]helpers.IdentityUserObject)
		}
	}

	return r0
}

type mockConstructorTestingTNewIdentityUserApiHelperInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewIdentityUserApiHelperInterface creates a new instance of IdentityUserApiHelperInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIdentityUserApiHelperInterface(t mockConstructorTestingTNewIdentityUserApiHelperInterface) *IdentityUserApiHelperInterface {
	mock := &IdentityUserApiHelperInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
