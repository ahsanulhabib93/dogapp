// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"

	"github.com/voonik/goConnect/api/go/vigeon/notify"
	"github.com/voonik/ss2/internal/app/helpers"
)

// APIHelperInterface is an autogenerated mock type for the APIHelperInterface type
type VigeonAPIHelperInterface struct {
	mock.Mock
	Count map[string]int
}

func SetVigeonAPIHelperMock() *VigeonAPIHelperInterface {
	mock := &VigeonAPIHelperInterface{Count: map[string]int{}}
	helpers.InjectMockVigeonAPIHelperInstance(mock)

	return mock
}

func UnsetVigeonHelperMock() {
	helpers.InjectMockVigeonAPIHelperInstance(nil)
}


// SendEmailAPI provides a mock function with given fields: _a0, _a1
func (_m *VigeonAPIHelperInterface) SendEmailAPI(_a0 context.Context, _a1 notify.EmailParam) *notify.EmailResp {
	ret := _m.Called(_a0, _a1)
	_m.Count["SendEmailAPI"] += 1

	var r0 *notify.EmailResp
	if rf, ok := ret.Get(0).(func(context.Context, notify.EmailParam) *notify.EmailResp); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*notify.EmailResp)
		}
	}

	return r0
}

// NewVigeonMockApiInterface creates a new instance of VigeonAPIHelperInterface. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewVigeonMockApiInterface(t testing.TB) *VigeonAPIHelperInterface {
	mock := &VigeonAPIHelperInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
